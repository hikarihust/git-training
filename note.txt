-So sánh giữa 2 nhanh: git difftool branch1 branch2
-Cách xem thông số cấu hình Git: git config -l
-Hủy thực hiện merge khi có conflict xảy ra: git merge --abort
-Khi pull Remote Repo mới nhất về mà có conflict xảy ra: git merge --abort
-Ctrl + C: Exit để thực hiện tiếp lệnh git
-git rebase --abort: Ngừng quá trình Rebase khi có conflict xảy ra
-git reflog: Ngoài việc xem được lịch sử commit giống như lệnh git log thì còn xem được các hành động của ta trên Local Repo
	Master Branch:git log
		commit 31c82455c4ef339b15ffcb16191d5a978f23b4b0 (HEAD -> master)
		Author: vudinhquang <vudinhquangk53@gmail.com>
		Date:   Sat Feb 9 16:09:02 2019 +0900
		    master - add abc
		commit 8cf64462ec597b5610a506f3c9e4302e5829fa68
		Author: vudinhquang <vudinhquangk53@gmail.com>
		Date:   Sat Feb 9 16:06:04 2019 +0900
		    init project

	Video Branch:git log
		commit 32b807a8397c6e4cef4f507bbee0ceb94b1b241e (HEAD -> video)
		Author: vudinhquang <vudinhquangk53@gmail.com>
		Date:   Sat Feb 9 16:07:48 2019 +0900
		    video - add 123
		commit 8cf64462ec597b5610a506f3c9e4302e5829fa68
		Author: vudinhquang <vudinhquangk53@gmail.com>
		Date:   Sat Feb 9 16:06:04 2019 +0900
		    init project

	git reflog:
	31c8245 (HEAD -> master) HEAD@{0}: commit: master - add abc
	8cf6446 HEAD@{1}: checkout: moving from video to master
	32b807a (video) HEAD@{2}: commit: video - add 123
	8cf6446 HEAD@{3}: checkout: moving from master to video
	8cf6446 HEAD@{4}: commit (initial): init project
-git log: Xem lại lịch sử commit trên 1 nhánh nào đó
	Video Branch:git log
		commit e5e6b371465a1864a9ddefda1c37e46993e2aa8e (HEAD -> video)
		Author: vudinhquang <vudinhquangk53@gmail.com>
		Date:   Sat Feb 9 16:33:50 2019 +0900
		    video - add 456
		commit 53e58870a18d8eff518df24d28e67c759091e697
		Author: vudinhquang <vudinhquangk53@gmail.com>
		Date:   Sat Feb 9 16:33:05 2019 +0900
		    video - add 123
		commit 6a6d5e176da085d25efa5340ad6da990aa250fb0 (master)
		Author: vudinhquang <vudinhquangk53@gmail.com>
		Date:   Sat Feb 9 16:32:01 2019 +0900
		    init project

-git reset --hard: Quay về 1 vị trí commit nào đó của Video Branch
	Video Branch:
	step1: git reset --hard 53e588
	step2: git log
		commit 53e58870a18d8eff518df24d28e67c759091e697 (HEAD -> video)
		Author: vudinhquang <vudinhquangk53@gmail.com>
		Date:   Sat Feb 9 16:33:05 2019 +0900
		    video - add 123
		commit 6a6d5e176da085d25efa5340ad6da990aa250fb0 (master)
		Author: vudinhquang <vudinhquangk53@gmail.com>
		Date:   Sat Feb 9 16:32:01 2019 +0900
		    init project
	-->Thường dùng câu lệnh git log để kiểm tra các commit đang có rồi sau đó dùng git reset --hard để reset về 1 commit mong muốn.

-------------------------------------------------------------------------------------------------------------------
1.Conflict
 -Conflict xảy ra khi có cùng 1 sựu thay đổi trên cùng 1 dòng của 1 tập tin và GIT không biết lựa chọn câu lệnh nào.
 -Conflict có thể xảy ra trong trường hợp làm việc nhóm: 2 người cùng chỉnh sửa trên cùng 1 file, 1 dòng code(Remote)
 -Khi 1 người làm việc nhưng ở mỗi nhánh lại có sự thao tác trên cùng 1 tập tin(Branch)


 2.Xử lý conflict
 -Branch:
 (Tình huống 1)
 	Master branch:readme.txt
 		init readme.txt(line 1)
 		abcxyz (line 2)
 	Video branch:readme.txt
 		init readme.txt(line 1)
 		video(line 2)
 	-->Khi merge 2 nhánh lại thì sẽ có conflict xảy ra tại line 2:
 		-coppy nhánh master ra chỗ khác
 		-git merge video(tại bước này có conflict xảy ra)
 		-git mergetool
 		-Xử lý conflict:paster lần lượt file tương ứng trên nhánh master vào winmerge thực hiện so sánh với nhánh video để merge
 		-tạo commit mới kết thúc quá trình merge
 
 (Tình huống 2)
 	Master branch:readme.txt
		init readme.txt
		abcxyz
		video
 	Video branch:readme.txt
		init readme.txt
		abcxyz

		Line 4
	-->Trong trường hợp này cũng vẫn sẽ có đụng độ xảy ra, các vấn đề conflict xảy ra:
		Tại line 3: lấy giá trị video hay lấy giá trị rỗng?
			init readme.txt
			abcxyz
			<<<<<<< HEAD
			video
			=======

			Line 4
			>>>>>>> video

-Remote:
	Local Repo:
		a1
		a2
	Remote Repo:
		a1
		b12
	-->Có conflict xảy ra khi push lên Repo(Note: trước khi push thì cần phải pull về trước)
		-git pull origin master: có Conflict xảy ra.
			a1
			<<<<<<< HEAD
			a2
			=======
			b12
			>>>>>>> 3ecf23e1b02bbe090ce644bb1c38dafc34221f03
	-Cách xử lý conflict trong trường hợp này:
		-coppy Local Repo ra chỗ khác
		-git pull origin master, tại đây sẽ có conflict xảy ra
		-git mergetool(merge bằng winmerge)
		-tạo ra commit mới(kết thúc quá trình xử lý conflict)
		-git pull origin master: thực hiện pull lại 1 lần nữa(Không bị conflict)
		-git push origin master